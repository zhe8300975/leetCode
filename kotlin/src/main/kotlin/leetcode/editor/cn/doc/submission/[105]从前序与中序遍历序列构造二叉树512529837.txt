    /**
     * Example:
     * var ti = TreeNode(5)
     * var v = ti.`val`
     * Definition for a binary tree node.
     * class TreeNode(var `val`: Int) {
     *     var left: TreeNode? = null
     *     var right: TreeNode? = null
     * }
     */

    class Solution {

        //   前 preorder = [3,9,20,15,7], 中 inorder = [9,3,15,20,7]
        fun buildTree(preorder: IntArray, inorder: IntArray): TreeNode? {
            return buildTree(preorder, 0, preorder.size - 1, inorder, 0, inorder.size - 1)
        }

        fun buildTree(preorder: IntArray, preorderStart: Int, preorderEnd: Int, inorder: IntArray, inorderStart: Int, inorderEnd: Int): TreeNode? {
            var treeNode = TreeNode(preorder[preorderStart])
            if (preorderStart != preorderEnd) {
                var node = preorder[preorderStart]
                var num = 0
                while (inorder[inorderStart + num] != node) {
                    num++
                }
                if (num > 0) {
                    treeNode.left = buildTree(preorder, preorderStart + 1, preorderStart + num, inorder, inorderStart, inorderStart + num - 1)
                }
                if (inorderEnd - inorderStart - num > 0) {
                    treeNode.right = buildTree(preorder, preorderStart + num+1, preorderEnd, inorder, inorderStart + num + 1, inorderEnd)
                }

            }
            return treeNode

        }
    }

//runtime:192 ms
//memory:38 MB
