class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        HashMap<Integer,Integer> map=new HashMap<>();
        for(int num:nums){
            int n=map.getOrDefault(num,0)+1;
            map.put(num,n);
        }
        int [][] list=new int[map.size()][2];
        int index=0;
        for(Map.Entry<Integer,Integer> item :map.entrySet()){
            list[index][0]=item.getValue();
            list[index][1]=item.getKey();
            index++;
        }
        Arrays.sort(list, new Comparator<int[]>() {
            @Override
            public int compare(int[] o1, int[] o2) {
                return o2[0]-o1[0];
            }
        });
        int []ans=new int[k];
        for(int i=0;i<k;i++){
            ans[i]=list[i][1];
        }
        return ans;

    }
}

//runtime:13 ms
//memory:41.1 MB
