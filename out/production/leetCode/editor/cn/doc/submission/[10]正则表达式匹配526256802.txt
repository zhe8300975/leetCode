    class Solution {
        fun isMatch(s: String, p: String): Boolean {
            var dp = Array(s.length+1) { BooleanArray(p.length+1) }
            dp[0][0] = true
            for (i in 0..s.length) {
                for (j in 1..p.length) {
                    if (p[j - 1] == '*') {
                        dp[i][j] = dp[i][j - 2]
                        if (match(s, p, i, j - 1)) {
                            dp[i][j] = dp[i][j] || dp[i - 1][j]
                        }
                    } else {
                        dp[i][j] = match(s, p, i, j) && dp[i - 1][j - 1]
                    }
                }
            }
            return dp[s.length][p.length]
        }


        fun match(s: String, p: String, i: Int, j: Int): Boolean {
            if (i == 0) {
                return false
            }
            if (p[j - 1] == '.') {
                return true
            }
            return s[i - 1] == p[j - 1]
        }
    }

//runtime:165 ms
//memory:34.8 MB
