class MinStack {
    Deque<Integer> stack;
    Deque<Integer> minStack;
    /** initialize your data structure here. */
    public MinStack() {
        stack= new LinkedList();
        minStack=new LinkedList();
    }
    
    public void push(int val) {
        stack.addLast(val);
        if(minStack.isEmpty()||minStack.getLast()>val){
            minStack.addLast(val);
        }else{
            minStack.addLast(minStack.getLast());
        }
    }
    
    public void pop() {
        if(!stack.isEmpty()){
            stack.removeLast();
            minStack.removeLast();
        }
    }
    
    public int top() {
        return stack.getLast();
    }
    
    public int getMin() {
        return minStack.getLast();
    }
}

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack obj = new MinStack();
 * obj.push(val);
 * obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.getMin();
 */
//runtime:7 ms
//memory:40 MB
