class Solution {
    public int findUnsortedSubarray(int[] nums) {
        int i = findRight(nums) - findLeft(nums);
        return i==0?0:i+1;

    }

    public int findLeft(int[] nums){
        int left=Integer.MAX_VALUE;
        for(int i=1;i<nums.length;i++){
            if(nums[i]<nums[i-1]){
                left=Math.min(left,nums[i]);
            }
        }
        for(int i=0;i<nums.length;i++){
            if(left<nums[i]){
                return i;
            }
        }
        return -1;
    }
      public int findRight(int[] nums){
          int right=Integer.MIN_VALUE;
          for(int i=nums.length-2;i>=0;i--){
              if(nums[i]>nums[i+1]){
                  right=Math.max(right,nums[i]);
              }
          }
          for(int i=nums.length-1;i>=0;i--){
              if(right>nums[i]){
                  return i;
              }
          }
          return -1;
      }
}

//runtime:2 ms
//memory:39.8 MB
