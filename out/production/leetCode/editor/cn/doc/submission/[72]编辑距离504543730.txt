    class Solution {
        fun minDistance(word1: String, word2: String): Int {
            var dp = Array(word1.length + 1) { IntArray(word2.length + 1) { 0 } }
                .apply {
                    for (x in 1..word1.length) {
                        this[x][0] = this[x - 1][0] + 1
                    }
                    for (y in 1..word2.length) {
                        this[0][y] = this[0][y - 1] + 1
                    }
                }
            for (x in 1..word1.length) {
                for (y in 1..word2.length) {
                    if (word1[x - 1] == word2[y - 1]) {
                        dp[x][y] = dp[x - 1][y - 1]
                    } else {
                        dp[x][y] = Math.min(dp[x - 1][y - 1], Math.min(dp[x - 1][y], dp[x][y - 1])) + 1
                    }
                }
            }
            return dp[word1.length][word2.length]

        }
    }

//runtime:188 ms
//memory:36.9 MB
