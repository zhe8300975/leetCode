/**
 * Example:
 * var ti = TreeNode(5)
 * var v = ti.`val`
 * Definition for a binary tree node.
 * class TreeNode(var `val`: Int) {
 *     var left: TreeNode? = null
 *     var right: TreeNode? = null
 * }
 */
class Solution {
    fun pathSum(root: TreeNode?, targetSum: Int): Int {
        if(root==null){
            return 0
        }
        var ans=0
        var map=HashMap<TreeNode,ArrayList<Long>>()
        buildMap(root,map)
        map.values.forEach { item->
            ans+=item.count { it==targetSum.toLong() }
        }
        return ans

    }
    fun buildMap(root: TreeNode,map:HashMap<TreeNode,ArrayList<Long>>){
        map[root]=ArrayList<Long>().apply { this.add(root.`val`.toLong()) }
        root.left?.let {
            buildMap(it,map)
            map[root]?.addAll( map[it]!!.map { item->item+root.`val` })
        }
        root.right?.let {
            buildMap(it,map)
            map[root]?.addAll( map[it]!!.map { item->item+root.`val` })
        }
    }
}

//runtime:410 ms
//memory:62.7 MB
