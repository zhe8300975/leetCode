    class Solution {
        public int numIslands(char[][] grid) {
            int ans = 0;
            for (int row = 0; row < grid.length; row++) {
                for (int column = 0; column < grid[0].length; column++) {
                    if (grid[row][column] == '1') {
                        deallands(grid, row, column);
                        ans++;
                    }
                }
            }
            return ans;
        }

        public void deallands(char[][] grid, int row, int column) {
            if (grid[row][column] == '1') {
                grid[row][column] = '0';
                if (row > 0) {
                    deallands(grid, row - 1, column);
                }
                if (column > 0) {
                    deallands(grid, row, column - 1);
                }
                if (row < grid.length - 1) {
                    deallands(grid, row + 1, column);
                }
                if (column < grid[0].length - 1) {
                    deallands(grid, row, column + 1);
                }
            }
        }
    }

//runtime:3 ms
//memory:46.7 MB
