/**
 * Definition for a binary tree node.
 * class TreeNode(var `val`: Int = 0) {
 *     var left: TreeNode? = null
 *     var right: TreeNode? = null
 * }
 */

class Solution {
    fun lowestCommonAncestor(root: TreeNode?, p: TreeNode?, q: TreeNode?): TreeNode? {
        if(root==null){
            return null
        }
        if(root==p||root==q){
            return root
        }
        val left=lowestCommonAncestor(root.left,p,q)
        val right=lowestCommonAncestor(root.right,p,q)
        if(left!=null&&right!=null){
            return root
        }
        if(left!=null){
            return left
        }
        if(right!=null){
            return right
        }
        return null

    }
}

//runtime:220 ms
//memory:39.2 MB
