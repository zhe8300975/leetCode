    class Solution {
        fun searchRange(nums: IntArray, target: Int): IntArray {
            return intArrayOf(searchRangeLeft(nums, target),searchRangeRight(nums, target))
        }

        fun searchRangeLeft(nums: IntArray, target: Int): Int {
            var left=0
            var right=nums.size-1
            while(left<right){
                var middle=(left+right)/2
                if(nums[middle]==target){
                    right=middle
                }else if(nums[middle]<target){
                    left=middle+1
                }else{
                    right=middle-1
                }
            }
            return if(left>=0&&left<nums.size&&nums[left]==target) left else -1
        }
        fun searchRangeRight(nums: IntArray, target: Int): Int {
            var left=0
            var right=nums.size-1
            while(left<right){
                var middle=(left+right+1)/2
                if(nums[middle]==target){
                    left=middle
                }else if(nums[middle]<target){
                    left=middle+1
                }else{
                    right=middle-1
                }
            }
            return if(right>=0&&right<=nums.size&&nums[right]==target) left else -1
        }

    }

//runtime:256 ms
//memory:37.2 MB
