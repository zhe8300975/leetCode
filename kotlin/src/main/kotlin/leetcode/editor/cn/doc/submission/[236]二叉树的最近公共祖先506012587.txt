/**
 * Definition for a binary tree node.
 * class TreeNode(var `val`: Int = 0) {
 *     var left: TreeNode? = null
 *     var right: TreeNode? = null
 * }
 */

class Solution {
    fun lowestCommonAncestor(root: TreeNode?, p: TreeNode?, q: TreeNode?): TreeNode? {
        if(root==null){
            return null
        }
        if(root==q||root==p){
            return root
        }
        var nodeLeft=lowestCommonAncestor(root.left,p,q)
        var nodeRight=lowestCommonAncestor(root.right,p,q)
        if(nodeLeft!=null&&nodeRight!=null){
            return root
        }else if(nodeLeft!=null){
            return nodeLeft
        }else if(nodeRight!=null){
            return nodeRight
        }
        return null
    }
}

//runtime:196 ms
//memory:39.5 MB
