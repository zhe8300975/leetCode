/**
 * Example:
 * var li = ListNode(5)
 * var v = li.`val`
 * Definition for singly-linked list.
 * class ListNode(var `val`: Int) {
 *     var next: ListNode? = null
 * }
 */
class Solution {
    fun isPalindrome(head: ListNode?): Boolean {
        var fast=head?.next
        var slow=head
        while(fast!=null){
            fast=fast?.next?.next
            slow=slow?.next
        }
        var mid=slow
        var head1=resrve(mid)
        var pre=head
        var pre1=head1
        while (pre!=null&&pre1!=null){
            if(pre.`val`!=pre1.`val`){
                return false
            }
            pre=pre.next
            pre1=pre1.next
        }
        return true




    }

    fun resrve(head: ListNode?):ListNode?{
        var ans=ListNode(-1)
        var pre=head
        while (pre!=null){
            var node=pre
            pre=pre.next
            node.next=ans.next
            ans.next=node
        }
        return ans.next
    }
}

//runtime:464 ms
//memory:51.6 MB
