class Solution {
    public int findUnsortedSubarray(int[] nums) {
        int left=getLeft(nums);
        int right=getRight(nums);
        if(right>left){
            return right-left+1;
        }
        return 0;

    }

    public int getLeft(int[] nums){
        int min=Integer.MAX_VALUE;
        for(int i=1;i<nums.length;i++){
            if(nums[i]<nums[i-1]){
                min=Math.min(min,nums[i]);
            }
        }
        for(int i=0;i<nums.length;i++){
            if(nums[i]>min){
                return i;
            }
        }
        return -1;
    }

    public int getRight(int[] nums){
        int max=Integer.MIN_VALUE;
        for(int i=nums.length-2;i>=0;i--){
            if(nums[i]>nums[i+1]){
                max=Math.max(max,nums[i]);
            }
        }
        for(int i=nums.length-1;i>=0;i--){
            if(nums[i]<max){
                return i;
            }
        }
        return -1;

    }
}

//runtime:2 ms
//memory:39.7 MB
